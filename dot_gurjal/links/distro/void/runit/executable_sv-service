#!/bin/bash

usage()
{
    echo "Usage: sv-service [-lsrh] service"
    exit
}

service=''
flag_list=false
flag_status=false
flag_restart=false

# read in args
while getopts "hlsr" opt; do
    case "${opt}" in
    h) usage ;;
    l) flag_list=true ;;
    s) flag_status=true ;;
    r) flag_restart=true ;;
    esac
done

# read in service
while [ -n "$1" ]; do
    case $1 in
    -*) ;;
    *) if [[ -z $service ]]; then service="$1"; else usage; fi ;;
    esac
    shift
done

# list option
if [[ -z $service ]] || [[ $flag_list == true ]]; then
    if [[ "$UID" -eq "$ROOT_UID" ]]; then
        echo "system:"
        service_dir=/var/service
    else
        echo "user:"
        service_dir=$SVDIR
    fi
    for service in $(ls "$service_dir"); do
        printf "    $(sv check $service)"
        log_status=$(sv status $service | rg ';' | cut -d ';' -f 2-)
        if [[ ! -z $log_status ]]; then
            printf ";$log_status\n"
        else
            printf "\n"
        fi
    done
    exit
fi

# restart option
if [[ $flag_restart == true ]]; then
    sv restart $service
    echo "restarting $service..."
    exit
fi

# check if legitimate service
service_status=$(sv check $service)
if [[ $(echo $service_status | awk -F':' '{print $1}') == 'fail' ]]; then
    [[ "$UID" -eq "$ROOT_UID" ]] && user="system" || user="user"
    echo "'$service' is not a $user service"
    exit
fi

# status option
if [[ $flag_status == true ]]; then
    echo $service_status
    exit
fi

# default toggle service
if [[ $(echo $service_status | awk -F':' '{print $2}') != ' down' ]]; then
    sv down $service
    echo "stopping $service..."
else
    sv up $service
    echo "starting $service..."
fi
